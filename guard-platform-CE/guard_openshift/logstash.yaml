kind: Service
apiVersion: v1
metadata:
  name: logstash
  namespace: guardce
  labels:
    app: logstash
    app.kubernetes.io/component: logstash
    app.kubernetes.io/instance: logstash
    app.kubernetes.io/name: logstash
    app.kubernetes.io/part-of: guard
  annotations:
spec:
  ports:
    - name: 5044-tcp
      protocol: TCP
      port: 5044
      targetPort: 5044
    - name: 8080-tcp
      protocol: TCP
      port: 80
      targetPort: 8080
  internalTrafficPolicy: Cluster
  type: ClusterIP
  ipFamilyPolicy: SingleStack
  sessionAffinity: None
  selector:
    app: logstash
    deploymentconfig: logstash
---
kind: Route
apiVersion: route.openshift.io/v1
metadata:
  name: logstash
  namespace: guardce
  labels:
    app: logstash
    app.kubernetes.io/component: logstash
    app.kubernetes.io/instance: logstash
    app.kubernetes.io/part-of: guard
  annotations:
spec:
  host: logstash-guardce.apps.ocp4.italtel.com
  to:
    kind: Service
    name: logstash
    weight: 100
  port:
    targetPort: 80-tcp
  wildcardPolicy: None
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: logstash
  namespace: guardce
data:
  ELASTIC_PORT: '9200'
  ELASTIC_SERVER: es-cluster.guardce.svc
  KAFKA_PORT: '9092'
  LS_JAVA_OPTS: '-Xmx512m -Xms512m'
  SERVER_ADDRESS: kafka-headless.guardce.svc
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: logstash-guard-claim
  creationTimestamp: null
spec:
  accessModes:
    - ReadWriteOnce
  selector: {}
  resources:
    requests:
      storage: 10Gi
  volumeMode: Filesystem
---
kind: Deployment
apiVersion: apps/v1
metadata:
  annotations:
  name: logstash
  namespace: guardce
  labels:
    app: logstash
    app.kubernetes.io/component: logstash
    app.kubernetes.io/instance: logstash
    app.kubernetes.io/name: logstash
    app.kubernetes.io/part-of: guard
    app.openshift.io/runtime: logstash
    app.openshift.io/runtime-namespace: guardce
    app.openshift.io/runtime-version: latest
spec:
  replicas: 1
  selector:
    matchLabels:
      app: logstash
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: logstash
        deploymentconfig: logstash
      annotations:
        openshift.io/generated-by: OpenShiftWebConsole
    spec:
      containers:
        - resources: {}
          terminationMessagePath: /dev/termination-log
          name: logstash
          ports:
            - containerPort: 5044
              protocol: TCP
            - containerPort: 9600
              protocol: TCP
          imagePullPolicy: Always
          volumeMounts:
            - name: logstash-guard-claim
              mountPath: /var/logstash-file-output
            - name: logstash-config
              mountPath: /usr/share/logstash/config
            - name: logstash-pipeline
              mountPath: /usr/share/logstash/pipeline
          terminationMessagePolicy: File
          envFrom:
            - configMapRef:
                name: logstash
          image: pierluca1/logstash:latest
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext: {}
      schedulerName: default-scheduler
      volumes:
        - name: logstash-guard-claim
          persistentVolumeClaim:
            claimName: logstash-guard-claim
        - name: logstash-config
          secret:
            defaultMode: 420
            secretName: logstash-config
        - name: logstash-pipeline
          secret:
            defaultMode: 420
            secretName: logstash-pipeline
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600

