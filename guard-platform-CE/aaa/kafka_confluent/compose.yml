version: '3.3'

services:
  zookeeper:
    image: zookeeper:3.5.8
    container_name: aa_module-zookeeper
    environment:
      ZOO_MY_ID: 1
      ZOO_SERVERS: server.1=zookeeper:2888:3888
      ZOO_CFG_EXTRA: "clientPort=2181"
    restart: unless-stopped

  kafka1:
    container_name: aa_module-kafka1
    image: guard/aaa/confluent_kafka:latest
    build:
      context: kafka_oauth
      dockerfile: ../kafka_confluent/Dockerfile
    ports:
      - 9092
      - 9093
      - 9094
    environment:
      # Essentials
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka1:9092,EXTERNAL://kafka1:9093,SSL://kafka1:9094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:SASL_SSL,SSL:SSL
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      # TLS Configuration
      KAFKA_SSL_ENABLED_PROTOCOLS: TLSv1.3,TLSv1.2
      KAFKA_SSL_KEYSTORE_FILENAME: kafka.jks
      KAFKA_SSL_KEY_CREDENTIALS: password
      KAFKA_SSL_KEYSTORE_CREDENTIALS: password
      KAFKA_SSL_TRUSTSTORE_FILENAME: truststore.jks
      KAFKA_SSL_TRUSTSTORE_CREDENTIALS: password
      KAFKA_SSL_CLIENT_AUTH: required
      KAFKA_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM: ""
      # SASL Configuration
      KAFKA_SASL_ENABLED_MECHANISMS: OAUTHBEARER
      KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: OAUTHBEARER
      KAFKA_LISTENER_NAME_EXTERNAL_OAUTHBEARER_SASL_JAAS_CONFIG: "org.apache.kafka.common.security.oauthbearer.OAuthBearerLoginModule required;"
      KAFKA_LISTENER_NAME_EXTERNAL_OAUTHBEARER_SASL_LOGIN_CALLBACK_HANDLER_CLASS: org.telematics.guard.aa.kafka.liboauthbearer.OAuthAuthenticateLoginCallbackHandler
      KAFKA_LISTENER_NAME_EXTERNAL_OAUTHBEARER_SASL_SERVER_CALLBACK_HANDLER_CLASS: org.telematics.guard.aa.kafka.liboauthbearer.OAuthAuthenticateValidatorCallbackHandler
      KAFKA_CONNECTIONS_MAX_REAUTH_MS: 60000
      KAFKA_AUTHORIZER_CLASS_NAME: org.telematics.guard.aa.kafka.liboauthbearer.CustomAuthorizer
      KAFKA_PRINCIPAL_BUILDER_CLASS: org.telematics.guard.aa.kafka.liboauthbearer.CustomPrincipalBuilder
      # SASL/OAuth Extension Configuration
      OAUTH_SERVER_BASE_URI: "https://idp:10443/oauth2/"
      OAUTH_SERVER_TOKEN_ENDPOINT_PATH: "/token"
      OAUTH_SERVER_INTROSPECTION_ENDPOINT_PATH: "/introspect"
      OAUTH_SERVER_CLIENT_ID: "kafka-broker"
      OAUTH_SERVER_CLIENT_SECRET: "yGC8KxKYYQ_q1UbTBAwxivThaZIa"
      OAUTH_SERVER_GRANT_TYPE: "client_credentials"
      OAUTH_SERVER_SCOPES: "kafka:cluster:kafka-cluster:cluster_action"
      OAUTH_SERVER_ACCEPT_UNSECURE_SERVER: "true"
      OAUTH_SERVER_ENFORCE: "false"
      # Temporary Authorization extension
      KAFKA_TEMPORARYAUTHZ_EXPIRETIME_SECONDS: 60
      # Logging Configuration
      KAFKA_LOG4J_LOGGERS: "org.telematics=DEBUG"
    command: /etc/confluent/docker/dockerize -wait https://idp:10443 -skip-tls-verify -timeout 600s /etc/confluent/docker/run
    #command: tail -f /dev/null
    depends_on:
      - zookeeper
      - idp
    restart: unless-stopped

  kafka_rest_proxy:
    container_name: aa_module-kafka_rest_proxy
    image: docker.io/confluentinc/cp-kafka-rest:6.1.0
    ports:
      - "9090:9090"
    hostname: kafka_rest_proxy
    environment:
      KAFKA_REST_HOST_NAME: kafka_rest_proxy
      KAFKA_REST_LISTENERS: "http://0.0.0.0:9090"
      KAFKA_REST_BOOTSTRAP_SERVERS: "kafka1:9092"
    depends_on:
      - kafka1
